name: Polly Production Deploy

on:
  push:
    branches:
      - main
      - beta
      - 'feature/*'

jobs:
  synthesize:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install boto3
        run: pip install boto3

      - name: Set ENV_NAME from branch
        id: setenv
        run: |
          echo "Branch is: $GITHUB_REF_NAME"
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            echo "ENV_NAME=production" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF_NAME" == "beta" ]]; then
            echo "ENV_NAME=staging" >> $GITHUB_ENV
          else
            echo "ENV_NAME=development" >> $GITHUB_ENV
          fi

      - name: Run synthesize.py and upload
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          python3 synthesize.py
          aws s3 cp output.mp3 s3://$S3_BUCKET/polly-audio/$ENV_NAME/python-${{ matrix.python-version }}/output.mp3

deploy:
  name: Deploy to Prod
  runs-on: ubuntu-latest
  needs: synthesize
  if: github.ref == 'refs/heads/main'

  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: terraform init
      working-directory: infrastructure

    - name: Terraform Apply (Prod)
      run: terraform apply -auto-approve -var-file=environments/prod.tfvars
      working-directory: infrastructure
